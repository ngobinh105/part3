{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchName","setSearchName","value","onChange","e","target","PersonForm","addNewPersons","newName","setNewName","number","setNumber","onSubmit","type","Persons","persons","onDelete","filter","person","name","toLowerCase","includes","map","onClick","id","baseUrl","getAll","axios","get","then","response","data","create","newPerson","post","update","updatedPerson","put","deleteUser","delete","Notification","message","error","className","App","useState","setPersons","setMessage","setError","console","log","useEffect","personService","preventDefault","existed","some","window","confirm","updateId","find","setTimeout","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6356ec3.chunk.js","sourcesContent":["const Filter = ({ searchName, setSearchName }) => {\n  return (\n    <div>\n      filter shown with\n      <input\n        value={searchName}\n        onChange={(e) => setSearchName(e.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","const PersonForm = ({\n  addNewPersons,\n  newName,\n  setNewName,\n  number,\n  setNumber,\n}) => {\n  return (\n    <div>\n      <form onSubmit={addNewPersons}>\n        <div>\n          name:{' '}\n          <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n        </div>\n        <div>\n          number:{' '}\n          <input value={number} onChange={(e) => setNumber(e.target.value)} />\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default PersonForm\n","const Persons = ({ persons, searchName, onDelete }) => {\n  return (\n    <div>\n      {' '}\n      {persons\n        .filter((person) =>\n          person.name.toLowerCase().includes(searchName.toLowerCase())\n        )\n        .map((person) => (\n          <p key={person.name}>\n            {person.name} {person.number}{' '}\n            <button onClick={() => onDelete(person.id)}>delete</button>\n          </p>\n        ))}\n    </div>\n  )\n}\n\nexport default Persons\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then((response) => response.data)\n}\nconst update = (id, updatedPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\n  return request.then((response) => response.data)\n}\nconst deleteUser = (id) => {\n  axios.delete(`${baseUrl}/${id}`)\n}\n\nconst persons = { getAll, create, update, deleteUser }\n\nexport default persons\n","const Notification = ({ message, error }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className={error ? 'error' : 'message'}>{message}</div>\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [number, setNumber] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(false)\n\n  console.log('p', persons)\n  const addNewPersons = (e) => {\n    e.preventDefault()\n    const existed = persons.some(\n      (e) => e.name.toLowerCase() === newName.toLowerCase()\n    )\n    if (existed) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one`\n        )\n      ) {\n        const updateId = persons.find(\n          (person) => person.name.toLowerCase() === newName.toLowerCase()\n        ).id\n        personService\n          .update(updateId, { name: newName, number: number })\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === updateId ? updatedPerson : person\n              )\n            )\n            setMessage(`${newName} is updated`)\n            setError(false)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch((error) => {\n            setMessage(`'${newName}' was already removed from server`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setError(true)\n          })\n      }\n    } else {\n      personService\n        .create({ name: newName, number: number })\n        .then((newPerson) => {\n          setPersons([...persons, newPerson])\n          setMessage(`${newName} is addded to phonebook`)\n          setError(false)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          setMessage(error.response.data.error)\n          setError(true)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n    setNumber('')\n    setNewName('')\n  }\n  const onDelete = (id) => {\n    if (\n      window.confirm(\n        `Delete ${persons.find((person) => person.id === id).name}`\n      )\n    ) {\n      personService.deleteUser(id)\n      setPersons(persons.filter((person) => person.id !== id))\n      setMessage(\n        `${\n          persons.find((person) => person.id === id).name\n        } has been successfully removed from the phonebook`\n      )\n      setError(false)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  useEffect(() => {\n    personService.getAll().then((persons) => {\n      console.log('personsssssss', persons)\n      setPersons(persons)\n    })\n  }, [])\n  return (\n    <div>\n      <h1>Phone book</h1>\n      <Notification message={message} error={error} />\n      <Filter searchName={searchName} setSearchName={setSearchName} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addNewPersons={addNewPersons}\n        newName={newName}\n        setNewName={setNewName}\n        number={number}\n        setNumber={setNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} searchName={searchName} onDelete={onDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}